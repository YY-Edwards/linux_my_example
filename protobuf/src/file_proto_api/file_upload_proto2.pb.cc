// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file_upload_proto2.proto

#include "file_upload_proto2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace edwards {
class UploadStartRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadStartRequest>
      _instance;
} _UploadStartRequest_default_instance_;
class UploadStartResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadStartResponse>
      _instance;
} _UploadStartResponse_default_instance_;
class FileFrameTransferRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileFrameTransferRequest>
      _instance;
} _FileFrameTransferRequest_default_instance_;
class FileFrameTransferResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileFrameTransferResponse>
      _instance;
} _FileFrameTransferResponse_default_instance_;
class UploadEndRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadEndRequest>
      _instance;
} _UploadEndRequest_default_instance_;
class UploadEndResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadEndResponse>
      _instance;
} _UploadEndResponse_default_instance_;
}  // namespace edwards
namespace protobuf_file_5fupload_5fproto2_2eproto {
static void InitDefaultsUploadStartRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edwards::_UploadStartRequest_default_instance_;
    new (ptr) ::edwards::UploadStartRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edwards::UploadStartRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UploadStartRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUploadStartRequest}, {}};

static void InitDefaultsUploadStartResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edwards::_UploadStartResponse_default_instance_;
    new (ptr) ::edwards::UploadStartResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edwards::UploadStartResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UploadStartResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUploadStartResponse}, {}};

static void InitDefaultsFileFrameTransferRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edwards::_FileFrameTransferRequest_default_instance_;
    new (ptr) ::edwards::FileFrameTransferRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edwards::FileFrameTransferRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileFrameTransferRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileFrameTransferRequest}, {}};

static void InitDefaultsFileFrameTransferResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edwards::_FileFrameTransferResponse_default_instance_;
    new (ptr) ::edwards::FileFrameTransferResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edwards::FileFrameTransferResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileFrameTransferResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileFrameTransferResponse}, {}};

static void InitDefaultsUploadEndRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edwards::_UploadEndRequest_default_instance_;
    new (ptr) ::edwards::UploadEndRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edwards::UploadEndRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UploadEndRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUploadEndRequest}, {}};

static void InitDefaultsUploadEndResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::edwards::_UploadEndResponse_default_instance_;
    new (ptr) ::edwards::UploadEndResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edwards::UploadEndResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UploadEndResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUploadEndResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UploadStartRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UploadStartResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileFrameTransferRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileFrameTransferResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UploadEndRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UploadEndResponse.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartRequest, package_numb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartRequest, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartRequest, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartRequest, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartRequest, file_fromat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartRequest, file_storage_path_),
  3,
  4,
  0,
  5,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartResponse, package_numb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartResponse, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadStartResponse, reason_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferRequest, package_numb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferRequest, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferRequest, frame_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferRequest, frame_datas_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferResponse, package_numb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferResponse, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferResponse, frame_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::FileFrameTransferResponse, reason_),
  2,
  3,
  4,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndRequest, package_numb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndRequest, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndRequest, file_name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndResponse, package_numb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndResponse, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndResponse, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edwards::UploadEndResponse, reason_),
  3,
  4,
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::edwards::UploadStartRequest)},
  { 17, 26, sizeof(::edwards::UploadStartResponse)},
  { 30, 39, sizeof(::edwards::FileFrameTransferRequest)},
  { 43, 53, sizeof(::edwards::FileFrameTransferResponse)},
  { 58, 66, sizeof(::edwards::UploadEndRequest)},
  { 69, 79, sizeof(::edwards::UploadEndResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::edwards::_UploadStartRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edwards::_UploadStartResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edwards::_FileFrameTransferRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edwards::_FileFrameTransferResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edwards::_UploadEndRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edwards::_UploadEndResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "file_upload_proto2.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030file_upload_proto2.proto\022\007edwards\"\221\001\n\022"
      "UploadStartRequest\022\024\n\014package_numb\030\001 \002(\003"
      "\022\017\n\007file_id\030\002 \002(\003\022\021\n\tfile_name\030\003 \002(\t\022\021\n\t"
      "file_size\030\004 \002(\006\022\023\n\013file_fromat\030\005 \002(\t\022\031\n\021"
      "file_storage_path\030\006 \001(\t\"\\\n\023UploadStartRe"
      "sponse\022\024\n\014package_numb\030\001 \002(\003\022\017\n\007file_id\030"
      "\002 \002(\003\022\016\n\006result\030\003 \002(\t\022\016\n\006reason\030\004 \001(\t\"j\n"
      "\030FileFrameTransferRequest\022\024\n\014package_num"
      "b\030\001 \002(\003\022\017\n\007file_id\030\002 \002(\003\022\022\n\nframe_size\030\003"
      " \002(\003\022\023\n\013frame_datas\030\004 \002(\014\"v\n\031FileFrameTr"
      "ansferResponse\022\024\n\014package_numb\030\001 \002(\003\022\017\n\007"
      "file_id\030\002 \002(\003\022\022\n\nframe_size\030\003 \002(\003\022\016\n\006res"
      "ult\030\004 \002(\t\022\016\n\006reason\030\005 \001(\t\"L\n\020UploadEndRe"
      "quest\022\024\n\014package_numb\030\001 \002(\003\022\017\n\007file_id\030\002"
      " \002(\003\022\021\n\tfile_name\030\003 \002(\t\"m\n\021UploadEndResp"
      "onse\022\024\n\014package_numb\030\001 \002(\003\022\017\n\007file_id\030\002 "
      "\002(\003\022\021\n\tfile_name\030\003 \002(\t\022\016\n\006result\030\004 \002(\t\022\016"
      "\n\006reason\030\005 \001(\tB-\n\031edwards.file_upload.te"
      "stsB\020FileUploadProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 741);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "file_upload_proto2.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_file_5fupload_5fproto2_2eproto
namespace edwards {

// ===================================================================

void UploadStartRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadStartRequest::kPackageNumbFieldNumber;
const int UploadStartRequest::kFileIdFieldNumber;
const int UploadStartRequest::kFileNameFieldNumber;
const int UploadStartRequest::kFileSizeFieldNumber;
const int UploadStartRequest::kFileFromatFieldNumber;
const int UploadStartRequest::kFileStoragePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadStartRequest::UploadStartRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_file_5fupload_5fproto2_2eproto::scc_info_UploadStartRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edwards.UploadStartRequest)
}
UploadStartRequest::UploadStartRequest(const UploadStartRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  file_fromat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_fromat()) {
    file_fromat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_fromat_);
  }
  file_storage_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_storage_path()) {
    file_storage_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_storage_path_);
  }
  ::memcpy(&package_numb_, &from.package_numb_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_size_) -
    reinterpret_cast<char*>(&package_numb_)) + sizeof(file_size_));
  // @@protoc_insertion_point(copy_constructor:edwards.UploadStartRequest)
}

void UploadStartRequest::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_fromat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_storage_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_numb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_size_) -
      reinterpret_cast<char*>(&package_numb_)) + sizeof(file_size_));
}

UploadStartRequest::~UploadStartRequest() {
  // @@protoc_insertion_point(destructor:edwards.UploadStartRequest)
  SharedDtor();
}

void UploadStartRequest::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_fromat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_storage_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UploadStartRequest::descriptor() {
  ::protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadStartRequest& UploadStartRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_file_5fupload_5fproto2_2eproto::scc_info_UploadStartRequest.base);
  return *internal_default_instance();
}


void UploadStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edwards.UploadStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      file_fromat_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      file_storage_path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&package_numb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&file_size_) -
        reinterpret_cast<char*>(&package_numb_)) + sizeof(file_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UploadStartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edwards.UploadStartRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 package_numb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_numb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &package_numb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 file_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.UploadStartRequest.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed64 file_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string file_fromat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_fromat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_fromat().data(), static_cast<int>(this->file_fromat().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.UploadStartRequest.file_fromat");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_storage_path = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_storage_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_storage_path().data(), static_cast<int>(this->file_storage_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.UploadStartRequest.file_storage_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edwards.UploadStartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edwards.UploadStartRequest)
  return false;
#undef DO_
}

void UploadStartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edwards.UploadStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->package_numb(), output);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->file_id(), output);
  }

  // required string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // required fixed64 file_size = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->file_size(), output);
  }

  // required string file_fromat = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_fromat().data(), static_cast<int>(this->file_fromat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartRequest.file_fromat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->file_fromat(), output);
  }

  // optional string file_storage_path = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_storage_path().data(), static_cast<int>(this->file_storage_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartRequest.file_storage_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->file_storage_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edwards.UploadStartRequest)
}

::google::protobuf::uint8* UploadStartRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edwards.UploadStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->package_numb(), target);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->file_id(), target);
  }

  // required string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // required fixed64 file_size = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->file_size(), target);
  }

  // required string file_fromat = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_fromat().data(), static_cast<int>(this->file_fromat().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartRequest.file_fromat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->file_fromat(), target);
  }

  // optional string file_storage_path = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_storage_path().data(), static_cast<int>(this->file_storage_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartRequest.file_storage_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->file_storage_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edwards.UploadStartRequest)
  return target;
}

size_t UploadStartRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:edwards.UploadStartRequest)
  size_t total_size = 0;

  if (has_file_name()) {
    // required string file_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  if (has_file_fromat()) {
    // required string file_fromat = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_fromat());
  }

  if (has_package_numb()) {
    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());
  }

  if (has_file_id()) {
    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());
  }

  if (has_file_size()) {
    // required fixed64 file_size = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t UploadStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edwards.UploadStartRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003b) ^ 0x0000003b) == 0) {  // All required fields are present.
    // required string file_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());

    // required string file_fromat = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_fromat());

    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());

    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());

    // required fixed64 file_size = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string file_storage_path = 6;
  if (has_file_storage_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_storage_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadStartRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edwards.UploadStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadStartRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadStartRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edwards.UploadStartRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edwards.UploadStartRequest)
    MergeFrom(*source);
  }
}

void UploadStartRequest::MergeFrom(const UploadStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edwards.UploadStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_file_fromat();
      file_fromat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_fromat_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_file_storage_path();
      file_storage_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_storage_path_);
    }
    if (cached_has_bits & 0x00000008u) {
      package_numb_ = from.package_numb_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_id_ = from.file_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      file_size_ = from.file_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UploadStartRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edwards.UploadStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadStartRequest::CopyFrom(const UploadStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edwards.UploadStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadStartRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003b) != 0x0000003b) return false;
  return true;
}

void UploadStartRequest::Swap(UploadStartRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadStartRequest::InternalSwap(UploadStartRequest* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_fromat_.Swap(&other->file_fromat_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_storage_path_.Swap(&other->file_storage_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_numb_, other->package_numb_);
  swap(file_id_, other->file_id_);
  swap(file_size_, other->file_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UploadStartRequest::GetMetadata() const {
  protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadStartResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadStartResponse::kPackageNumbFieldNumber;
const int UploadStartResponse::kFileIdFieldNumber;
const int UploadStartResponse::kResultFieldNumber;
const int UploadStartResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadStartResponse::UploadStartResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_file_5fupload_5fproto2_2eproto::scc_info_UploadStartResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edwards.UploadStartResponse)
}
UploadStartResponse::UploadStartResponse(const UploadStartResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reason()) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ::memcpy(&package_numb_, &from.package_numb_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_id_) -
    reinterpret_cast<char*>(&package_numb_)) + sizeof(file_id_));
  // @@protoc_insertion_point(copy_constructor:edwards.UploadStartResponse)
}

void UploadStartResponse::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_numb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_id_) -
      reinterpret_cast<char*>(&package_numb_)) + sizeof(file_id_));
}

UploadStartResponse::~UploadStartResponse() {
  // @@protoc_insertion_point(destructor:edwards.UploadStartResponse)
  SharedDtor();
}

void UploadStartResponse::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UploadStartResponse::descriptor() {
  ::protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadStartResponse& UploadStartResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_file_5fupload_5fproto2_2eproto::scc_info_UploadStartResponse.base);
  return *internal_default_instance();
}


void UploadStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edwards.UploadStartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      reason_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&package_numb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&file_id_) -
        reinterpret_cast<char*>(&package_numb_)) + sizeof(file_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UploadStartResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edwards.UploadStartResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 package_numb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_numb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &package_numb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 file_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.UploadStartResponse.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reason = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.UploadStartResponse.reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edwards.UploadStartResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edwards.UploadStartResponse)
  return false;
#undef DO_
}

void UploadStartResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edwards.UploadStartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->package_numb(), output);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->file_id(), output);
  }

  // required string result = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartResponse.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->result(), output);
  }

  // optional string reason = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edwards.UploadStartResponse)
}

::google::protobuf::uint8* UploadStartResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edwards.UploadStartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->package_numb(), target);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->file_id(), target);
  }

  // required string result = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartResponse.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->result(), target);
  }

  // optional string reason = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadStartResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edwards.UploadStartResponse)
  return target;
}

size_t UploadStartResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:edwards.UploadStartResponse)
  size_t total_size = 0;

  if (has_result()) {
    // required string result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  if (has_package_numb()) {
    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());
  }

  if (has_file_id()) {
    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());
  }

  return total_size;
}
size_t UploadStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edwards.UploadStartResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required string result = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());

    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());

    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reason = 4;
  if (has_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadStartResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edwards.UploadStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadStartResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadStartResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edwards.UploadStartResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edwards.UploadStartResponse)
    MergeFrom(*source);
  }
}

void UploadStartResponse::MergeFrom(const UploadStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edwards.UploadStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
    if (cached_has_bits & 0x00000004u) {
      package_numb_ = from.package_numb_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_id_ = from.file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UploadStartResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edwards.UploadStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadStartResponse::CopyFrom(const UploadStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edwards.UploadStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadStartResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  return true;
}

void UploadStartResponse::Swap(UploadStartResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadStartResponse::InternalSwap(UploadStartResponse* other) {
  using std::swap;
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_numb_, other->package_numb_);
  swap(file_id_, other->file_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UploadStartResponse::GetMetadata() const {
  protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileFrameTransferRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileFrameTransferRequest::kPackageNumbFieldNumber;
const int FileFrameTransferRequest::kFileIdFieldNumber;
const int FileFrameTransferRequest::kFrameSizeFieldNumber;
const int FileFrameTransferRequest::kFrameDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileFrameTransferRequest::FileFrameTransferRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_file_5fupload_5fproto2_2eproto::scc_info_FileFrameTransferRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edwards.FileFrameTransferRequest)
}
FileFrameTransferRequest::FileFrameTransferRequest(const FileFrameTransferRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_frame_datas()) {
    frame_datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_datas_);
  }
  ::memcpy(&package_numb_, &from.package_numb_,
    static_cast<size_t>(reinterpret_cast<char*>(&frame_size_) -
    reinterpret_cast<char*>(&package_numb_)) + sizeof(frame_size_));
  // @@protoc_insertion_point(copy_constructor:edwards.FileFrameTransferRequest)
}

void FileFrameTransferRequest::SharedCtor() {
  frame_datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_numb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_size_) -
      reinterpret_cast<char*>(&package_numb_)) + sizeof(frame_size_));
}

FileFrameTransferRequest::~FileFrameTransferRequest() {
  // @@protoc_insertion_point(destructor:edwards.FileFrameTransferRequest)
  SharedDtor();
}

void FileFrameTransferRequest::SharedDtor() {
  frame_datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileFrameTransferRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileFrameTransferRequest::descriptor() {
  ::protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileFrameTransferRequest& FileFrameTransferRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_file_5fupload_5fproto2_2eproto::scc_info_FileFrameTransferRequest.base);
  return *internal_default_instance();
}


void FileFrameTransferRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edwards.FileFrameTransferRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    frame_datas_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&package_numb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&frame_size_) -
        reinterpret_cast<char*>(&package_numb_)) + sizeof(frame_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileFrameTransferRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edwards.FileFrameTransferRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 package_numb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_numb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &package_numb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 file_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 frame_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_frame_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frame_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes frame_datas = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_frame_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edwards.FileFrameTransferRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edwards.FileFrameTransferRequest)
  return false;
#undef DO_
}

void FileFrameTransferRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edwards.FileFrameTransferRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->package_numb(), output);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->file_id(), output);
  }

  // required int64 frame_size = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->frame_size(), output);
  }

  // required bytes frame_datas = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->frame_datas(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edwards.FileFrameTransferRequest)
}

::google::protobuf::uint8* FileFrameTransferRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edwards.FileFrameTransferRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->package_numb(), target);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->file_id(), target);
  }

  // required int64 frame_size = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->frame_size(), target);
  }

  // required bytes frame_datas = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->frame_datas(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edwards.FileFrameTransferRequest)
  return target;
}

size_t FileFrameTransferRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:edwards.FileFrameTransferRequest)
  size_t total_size = 0;

  if (has_frame_datas()) {
    // required bytes frame_datas = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->frame_datas());
  }

  if (has_package_numb()) {
    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());
  }

  if (has_file_id()) {
    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());
  }

  if (has_frame_size()) {
    // required int64 frame_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame_size());
  }

  return total_size;
}
size_t FileFrameTransferRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edwards.FileFrameTransferRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes frame_datas = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->frame_datas());

    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());

    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());

    // required int64 frame_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileFrameTransferRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edwards.FileFrameTransferRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FileFrameTransferRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileFrameTransferRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edwards.FileFrameTransferRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edwards.FileFrameTransferRequest)
    MergeFrom(*source);
  }
}

void FileFrameTransferRequest::MergeFrom(const FileFrameTransferRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edwards.FileFrameTransferRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_frame_datas();
      frame_datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_datas_);
    }
    if (cached_has_bits & 0x00000002u) {
      package_numb_ = from.package_numb_;
    }
    if (cached_has_bits & 0x00000004u) {
      file_id_ = from.file_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      frame_size_ = from.frame_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileFrameTransferRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edwards.FileFrameTransferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileFrameTransferRequest::CopyFrom(const FileFrameTransferRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edwards.FileFrameTransferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileFrameTransferRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void FileFrameTransferRequest::Swap(FileFrameTransferRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileFrameTransferRequest::InternalSwap(FileFrameTransferRequest* other) {
  using std::swap;
  frame_datas_.Swap(&other->frame_datas_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_numb_, other->package_numb_);
  swap(file_id_, other->file_id_);
  swap(frame_size_, other->frame_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileFrameTransferRequest::GetMetadata() const {
  protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileFrameTransferResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileFrameTransferResponse::kPackageNumbFieldNumber;
const int FileFrameTransferResponse::kFileIdFieldNumber;
const int FileFrameTransferResponse::kFrameSizeFieldNumber;
const int FileFrameTransferResponse::kResultFieldNumber;
const int FileFrameTransferResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileFrameTransferResponse::FileFrameTransferResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_file_5fupload_5fproto2_2eproto::scc_info_FileFrameTransferResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edwards.FileFrameTransferResponse)
}
FileFrameTransferResponse::FileFrameTransferResponse(const FileFrameTransferResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reason()) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ::memcpy(&package_numb_, &from.package_numb_,
    static_cast<size_t>(reinterpret_cast<char*>(&frame_size_) -
    reinterpret_cast<char*>(&package_numb_)) + sizeof(frame_size_));
  // @@protoc_insertion_point(copy_constructor:edwards.FileFrameTransferResponse)
}

void FileFrameTransferResponse::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_numb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_size_) -
      reinterpret_cast<char*>(&package_numb_)) + sizeof(frame_size_));
}

FileFrameTransferResponse::~FileFrameTransferResponse() {
  // @@protoc_insertion_point(destructor:edwards.FileFrameTransferResponse)
  SharedDtor();
}

void FileFrameTransferResponse::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileFrameTransferResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileFrameTransferResponse::descriptor() {
  ::protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileFrameTransferResponse& FileFrameTransferResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_file_5fupload_5fproto2_2eproto::scc_info_FileFrameTransferResponse.base);
  return *internal_default_instance();
}


void FileFrameTransferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edwards.FileFrameTransferResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      reason_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&package_numb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&frame_size_) -
        reinterpret_cast<char*>(&package_numb_)) + sizeof(frame_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileFrameTransferResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edwards.FileFrameTransferResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 package_numb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_numb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &package_numb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 file_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 frame_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_frame_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frame_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.FileFrameTransferResponse.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reason = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.FileFrameTransferResponse.reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edwards.FileFrameTransferResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edwards.FileFrameTransferResponse)
  return false;
#undef DO_
}

void FileFrameTransferResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edwards.FileFrameTransferResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->package_numb(), output);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->file_id(), output);
  }

  // required int64 frame_size = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->frame_size(), output);
  }

  // required string result = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.FileFrameTransferResponse.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->result(), output);
  }

  // optional string reason = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.FileFrameTransferResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edwards.FileFrameTransferResponse)
}

::google::protobuf::uint8* FileFrameTransferResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edwards.FileFrameTransferResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->package_numb(), target);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->file_id(), target);
  }

  // required int64 frame_size = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->frame_size(), target);
  }

  // required string result = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.FileFrameTransferResponse.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->result(), target);
  }

  // optional string reason = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.FileFrameTransferResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edwards.FileFrameTransferResponse)
  return target;
}

size_t FileFrameTransferResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:edwards.FileFrameTransferResponse)
  size_t total_size = 0;

  if (has_result()) {
    // required string result = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  if (has_package_numb()) {
    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());
  }

  if (has_file_id()) {
    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());
  }

  if (has_frame_size()) {
    // required int64 frame_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame_size());
  }

  return total_size;
}
size_t FileFrameTransferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edwards.FileFrameTransferResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001d) ^ 0x0000001d) == 0) {  // All required fields are present.
    // required string result = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());

    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());

    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());

    // required int64 frame_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reason = 5;
  if (has_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileFrameTransferResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edwards.FileFrameTransferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FileFrameTransferResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileFrameTransferResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edwards.FileFrameTransferResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edwards.FileFrameTransferResponse)
    MergeFrom(*source);
  }
}

void FileFrameTransferResponse::MergeFrom(const FileFrameTransferResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edwards.FileFrameTransferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
    if (cached_has_bits & 0x00000004u) {
      package_numb_ = from.package_numb_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_id_ = from.file_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      frame_size_ = from.frame_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileFrameTransferResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edwards.FileFrameTransferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileFrameTransferResponse::CopyFrom(const FileFrameTransferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edwards.FileFrameTransferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileFrameTransferResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001d) != 0x0000001d) return false;
  return true;
}

void FileFrameTransferResponse::Swap(FileFrameTransferResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileFrameTransferResponse::InternalSwap(FileFrameTransferResponse* other) {
  using std::swap;
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_numb_, other->package_numb_);
  swap(file_id_, other->file_id_);
  swap(frame_size_, other->frame_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileFrameTransferResponse::GetMetadata() const {
  protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadEndRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadEndRequest::kPackageNumbFieldNumber;
const int UploadEndRequest::kFileIdFieldNumber;
const int UploadEndRequest::kFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadEndRequest::UploadEndRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_file_5fupload_5fproto2_2eproto::scc_info_UploadEndRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edwards.UploadEndRequest)
}
UploadEndRequest::UploadEndRequest(const UploadEndRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  ::memcpy(&package_numb_, &from.package_numb_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_id_) -
    reinterpret_cast<char*>(&package_numb_)) + sizeof(file_id_));
  // @@protoc_insertion_point(copy_constructor:edwards.UploadEndRequest)
}

void UploadEndRequest::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_numb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_id_) -
      reinterpret_cast<char*>(&package_numb_)) + sizeof(file_id_));
}

UploadEndRequest::~UploadEndRequest() {
  // @@protoc_insertion_point(destructor:edwards.UploadEndRequest)
  SharedDtor();
}

void UploadEndRequest::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadEndRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UploadEndRequest::descriptor() {
  ::protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadEndRequest& UploadEndRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_file_5fupload_5fproto2_2eproto::scc_info_UploadEndRequest.base);
  return *internal_default_instance();
}


void UploadEndRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edwards.UploadEndRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&package_numb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&file_id_) -
        reinterpret_cast<char*>(&package_numb_)) + sizeof(file_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UploadEndRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edwards.UploadEndRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 package_numb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_numb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &package_numb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 file_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.UploadEndRequest.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edwards.UploadEndRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edwards.UploadEndRequest)
  return false;
#undef DO_
}

void UploadEndRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edwards.UploadEndRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->package_numb(), output);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->file_id(), output);
  }

  // required string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadEndRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edwards.UploadEndRequest)
}

::google::protobuf::uint8* UploadEndRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edwards.UploadEndRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->package_numb(), target);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->file_id(), target);
  }

  // required string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadEndRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edwards.UploadEndRequest)
  return target;
}

size_t UploadEndRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:edwards.UploadEndRequest)
  size_t total_size = 0;

  if (has_file_name()) {
    // required string file_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  if (has_package_numb()) {
    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());
  }

  if (has_file_id()) {
    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());
  }

  return total_size;
}
size_t UploadEndRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edwards.UploadEndRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string file_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());

    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());

    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadEndRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edwards.UploadEndRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadEndRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadEndRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edwards.UploadEndRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edwards.UploadEndRequest)
    MergeFrom(*source);
  }
}

void UploadEndRequest::MergeFrom(const UploadEndRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edwards.UploadEndRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      package_numb_ = from.package_numb_;
    }
    if (cached_has_bits & 0x00000004u) {
      file_id_ = from.file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UploadEndRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edwards.UploadEndRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadEndRequest::CopyFrom(const UploadEndRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edwards.UploadEndRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadEndRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UploadEndRequest::Swap(UploadEndRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadEndRequest::InternalSwap(UploadEndRequest* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_numb_, other->package_numb_);
  swap(file_id_, other->file_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UploadEndRequest::GetMetadata() const {
  protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadEndResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadEndResponse::kPackageNumbFieldNumber;
const int UploadEndResponse::kFileIdFieldNumber;
const int UploadEndResponse::kFileNameFieldNumber;
const int UploadEndResponse::kResultFieldNumber;
const int UploadEndResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadEndResponse::UploadEndResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_file_5fupload_5fproto2_2eproto::scc_info_UploadEndResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:edwards.UploadEndResponse)
}
UploadEndResponse::UploadEndResponse(const UploadEndResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reason()) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ::memcpy(&package_numb_, &from.package_numb_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_id_) -
    reinterpret_cast<char*>(&package_numb_)) + sizeof(file_id_));
  // @@protoc_insertion_point(copy_constructor:edwards.UploadEndResponse)
}

void UploadEndResponse::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_numb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_id_) -
      reinterpret_cast<char*>(&package_numb_)) + sizeof(file_id_));
}

UploadEndResponse::~UploadEndResponse() {
  // @@protoc_insertion_point(destructor:edwards.UploadEndResponse)
  SharedDtor();
}

void UploadEndResponse::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadEndResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UploadEndResponse::descriptor() {
  ::protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadEndResponse& UploadEndResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_file_5fupload_5fproto2_2eproto::scc_info_UploadEndResponse.base);
  return *internal_default_instance();
}


void UploadEndResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:edwards.UploadEndResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      result_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      reason_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&package_numb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&file_id_) -
        reinterpret_cast<char*>(&package_numb_)) + sizeof(file_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UploadEndResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edwards.UploadEndResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 package_numb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_numb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &package_numb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 file_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.UploadEndResponse.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.UploadEndResponse.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reason = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "edwards.UploadEndResponse.reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edwards.UploadEndResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edwards.UploadEndResponse)
  return false;
#undef DO_
}

void UploadEndResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edwards.UploadEndResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->package_numb(), output);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->file_id(), output);
  }

  // required string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadEndResponse.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // required string result = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadEndResponse.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->result(), output);
  }

  // optional string reason = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadEndResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edwards.UploadEndResponse)
}

::google::protobuf::uint8* UploadEndResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edwards.UploadEndResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 package_numb = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->package_numb(), target);
  }

  // required int64 file_id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->file_id(), target);
  }

  // required string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadEndResponse.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // required string result = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadEndResponse.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->result(), target);
  }

  // optional string reason = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "edwards.UploadEndResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edwards.UploadEndResponse)
  return target;
}

size_t UploadEndResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:edwards.UploadEndResponse)
  size_t total_size = 0;

  if (has_file_name()) {
    // required string file_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  if (has_result()) {
    // required string result = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  if (has_package_numb()) {
    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());
  }

  if (has_file_id()) {
    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());
  }

  return total_size;
}
size_t UploadEndResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edwards.UploadEndResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001b) ^ 0x0000001b) == 0) {  // All required fields are present.
    // required string file_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());

    // required string result = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());

    // required int64 package_numb = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->package_numb());

    // required int64 file_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->file_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reason = 5;
  if (has_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadEndResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edwards.UploadEndResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadEndResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadEndResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edwards.UploadEndResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edwards.UploadEndResponse)
    MergeFrom(*source);
  }
}

void UploadEndResponse::MergeFrom(const UploadEndResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edwards.UploadEndResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
    if (cached_has_bits & 0x00000008u) {
      package_numb_ = from.package_numb_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_id_ = from.file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UploadEndResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edwards.UploadEndResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadEndResponse::CopyFrom(const UploadEndResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edwards.UploadEndResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadEndResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001b) != 0x0000001b) return false;
  return true;
}

void UploadEndResponse::Swap(UploadEndResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadEndResponse::InternalSwap(UploadEndResponse* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_numb_, other->package_numb_);
  swap(file_id_, other->file_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UploadEndResponse::GetMetadata() const {
  protobuf_file_5fupload_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5fupload_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace edwards
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edwards::UploadStartRequest* Arena::CreateMaybeMessage< ::edwards::UploadStartRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edwards::UploadStartRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edwards::UploadStartResponse* Arena::CreateMaybeMessage< ::edwards::UploadStartResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edwards::UploadStartResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edwards::FileFrameTransferRequest* Arena::CreateMaybeMessage< ::edwards::FileFrameTransferRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edwards::FileFrameTransferRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edwards::FileFrameTransferResponse* Arena::CreateMaybeMessage< ::edwards::FileFrameTransferResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edwards::FileFrameTransferResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edwards::UploadEndRequest* Arena::CreateMaybeMessage< ::edwards::UploadEndRequest >(Arena* arena) {
  return Arena::CreateInternal< ::edwards::UploadEndRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::edwards::UploadEndResponse* Arena::CreateMaybeMessage< ::edwards::UploadEndResponse >(Arena* arena) {
  return Arena::CreateInternal< ::edwards::UploadEndResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
