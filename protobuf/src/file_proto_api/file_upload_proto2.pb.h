// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file_upload_proto2.proto

#ifndef PROTOBUF_INCLUDED_file_5fupload_5fproto2_2eproto
#define PROTOBUF_INCLUDED_file_5fupload_5fproto2_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_file_5fupload_5fproto2_2eproto 

namespace protobuf_file_5fupload_5fproto2_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_file_5fupload_5fproto2_2eproto
namespace edwards {
class FileFrameTransferRequest;
class FileFrameTransferRequestDefaultTypeInternal;
extern FileFrameTransferRequestDefaultTypeInternal _FileFrameTransferRequest_default_instance_;
class FileFrameTransferResponse;
class FileFrameTransferResponseDefaultTypeInternal;
extern FileFrameTransferResponseDefaultTypeInternal _FileFrameTransferResponse_default_instance_;
class UploadEndRequest;
class UploadEndRequestDefaultTypeInternal;
extern UploadEndRequestDefaultTypeInternal _UploadEndRequest_default_instance_;
class UploadEndResponse;
class UploadEndResponseDefaultTypeInternal;
extern UploadEndResponseDefaultTypeInternal _UploadEndResponse_default_instance_;
class UploadStartReponse;
class UploadStartReponseDefaultTypeInternal;
extern UploadStartReponseDefaultTypeInternal _UploadStartReponse_default_instance_;
class UploadStartRequest;
class UploadStartRequestDefaultTypeInternal;
extern UploadStartRequestDefaultTypeInternal _UploadStartRequest_default_instance_;
}  // namespace edwards
namespace google {
namespace protobuf {
template<> ::edwards::FileFrameTransferRequest* Arena::CreateMaybeMessage<::edwards::FileFrameTransferRequest>(Arena*);
template<> ::edwards::FileFrameTransferResponse* Arena::CreateMaybeMessage<::edwards::FileFrameTransferResponse>(Arena*);
template<> ::edwards::UploadEndRequest* Arena::CreateMaybeMessage<::edwards::UploadEndRequest>(Arena*);
template<> ::edwards::UploadEndResponse* Arena::CreateMaybeMessage<::edwards::UploadEndResponse>(Arena*);
template<> ::edwards::UploadStartReponse* Arena::CreateMaybeMessage<::edwards::UploadStartReponse>(Arena*);
template<> ::edwards::UploadStartRequest* Arena::CreateMaybeMessage<::edwards::UploadStartRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace edwards {

// ===================================================================

class UploadStartRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:edwards.UploadStartRequest) */ {
 public:
  UploadStartRequest();
  virtual ~UploadStartRequest();

  UploadStartRequest(const UploadStartRequest& from);

  inline UploadStartRequest& operator=(const UploadStartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UploadStartRequest(UploadStartRequest&& from) noexcept
    : UploadStartRequest() {
    *this = ::std::move(from);
  }

  inline UploadStartRequest& operator=(UploadStartRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadStartRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UploadStartRequest* internal_default_instance() {
    return reinterpret_cast<const UploadStartRequest*>(
               &_UploadStartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UploadStartRequest* other);
  friend void swap(UploadStartRequest& a, UploadStartRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UploadStartRequest* New() const final {
    return CreateMaybeMessage<UploadStartRequest>(NULL);
  }

  UploadStartRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UploadStartRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UploadStartRequest& from);
  void MergeFrom(const UploadStartRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UploadStartRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string file_name = 3;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // required string file_fromat = 5;
  bool has_file_fromat() const;
  void clear_file_fromat();
  static const int kFileFromatFieldNumber = 5;
  const ::std::string& file_fromat() const;
  void set_file_fromat(const ::std::string& value);
  #if LANG_CXX11
  void set_file_fromat(::std::string&& value);
  #endif
  void set_file_fromat(const char* value);
  void set_file_fromat(const char* value, size_t size);
  ::std::string* mutable_file_fromat();
  ::std::string* release_file_fromat();
  void set_allocated_file_fromat(::std::string* file_fromat);

  // optional string file_storage_path = 6;
  bool has_file_storage_path() const;
  void clear_file_storage_path();
  static const int kFileStoragePathFieldNumber = 6;
  const ::std::string& file_storage_path() const;
  void set_file_storage_path(const ::std::string& value);
  #if LANG_CXX11
  void set_file_storage_path(::std::string&& value);
  #endif
  void set_file_storage_path(const char* value);
  void set_file_storage_path(const char* value, size_t size);
  ::std::string* mutable_file_storage_path();
  ::std::string* release_file_storage_path();
  void set_allocated_file_storage_path(::std::string* file_storage_path);

  // required int64 package_numb = 1;
  bool has_package_numb() const;
  void clear_package_numb();
  static const int kPackageNumbFieldNumber = 1;
  ::google::protobuf::int64 package_numb() const;
  void set_package_numb(::google::protobuf::int64 value);

  // required int64 file_id = 2;
  bool has_file_id() const;
  void clear_file_id();
  static const int kFileIdFieldNumber = 2;
  ::google::protobuf::int64 file_id() const;
  void set_file_id(::google::protobuf::int64 value);

  // required fixed64 file_size = 4;
  bool has_file_size() const;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 4;
  ::google::protobuf::uint64 file_size() const;
  void set_file_size(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:edwards.UploadStartRequest)
 private:
  void set_has_package_numb();
  void clear_has_package_numb();
  void set_has_file_id();
  void clear_has_file_id();
  void set_has_file_name();
  void clear_has_file_name();
  void set_has_file_size();
  void clear_has_file_size();
  void set_has_file_fromat();
  void clear_has_file_fromat();
  void set_has_file_storage_path();
  void clear_has_file_storage_path();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::internal::ArenaStringPtr file_fromat_;
  ::google::protobuf::internal::ArenaStringPtr file_storage_path_;
  ::google::protobuf::int64 package_numb_;
  ::google::protobuf::int64 file_id_;
  ::google::protobuf::uint64 file_size_;
  friend struct ::protobuf_file_5fupload_5fproto2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UploadStartReponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:edwards.UploadStartReponse) */ {
 public:
  UploadStartReponse();
  virtual ~UploadStartReponse();

  UploadStartReponse(const UploadStartReponse& from);

  inline UploadStartReponse& operator=(const UploadStartReponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UploadStartReponse(UploadStartReponse&& from) noexcept
    : UploadStartReponse() {
    *this = ::std::move(from);
  }

  inline UploadStartReponse& operator=(UploadStartReponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadStartReponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UploadStartReponse* internal_default_instance() {
    return reinterpret_cast<const UploadStartReponse*>(
               &_UploadStartReponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UploadStartReponse* other);
  friend void swap(UploadStartReponse& a, UploadStartReponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UploadStartReponse* New() const final {
    return CreateMaybeMessage<UploadStartReponse>(NULL);
  }

  UploadStartReponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UploadStartReponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UploadStartReponse& from);
  void MergeFrom(const UploadStartReponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UploadStartReponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // optional string reason = 4;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // required int64 package_numb = 1;
  bool has_package_numb() const;
  void clear_package_numb();
  static const int kPackageNumbFieldNumber = 1;
  ::google::protobuf::int64 package_numb() const;
  void set_package_numb(::google::protobuf::int64 value);

  // required int64 file_id = 2;
  bool has_file_id() const;
  void clear_file_id();
  static const int kFileIdFieldNumber = 2;
  ::google::protobuf::int64 file_id() const;
  void set_file_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:edwards.UploadStartReponse)
 private:
  void set_has_package_numb();
  void clear_has_package_numb();
  void set_has_file_id();
  void clear_has_file_id();
  void set_has_result();
  void clear_has_result();
  void set_has_reason();
  void clear_has_reason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::google::protobuf::int64 package_numb_;
  ::google::protobuf::int64 file_id_;
  friend struct ::protobuf_file_5fupload_5fproto2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileFrameTransferRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:edwards.FileFrameTransferRequest) */ {
 public:
  FileFrameTransferRequest();
  virtual ~FileFrameTransferRequest();

  FileFrameTransferRequest(const FileFrameTransferRequest& from);

  inline FileFrameTransferRequest& operator=(const FileFrameTransferRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileFrameTransferRequest(FileFrameTransferRequest&& from) noexcept
    : FileFrameTransferRequest() {
    *this = ::std::move(from);
  }

  inline FileFrameTransferRequest& operator=(FileFrameTransferRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileFrameTransferRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileFrameTransferRequest* internal_default_instance() {
    return reinterpret_cast<const FileFrameTransferRequest*>(
               &_FileFrameTransferRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(FileFrameTransferRequest* other);
  friend void swap(FileFrameTransferRequest& a, FileFrameTransferRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileFrameTransferRequest* New() const final {
    return CreateMaybeMessage<FileFrameTransferRequest>(NULL);
  }

  FileFrameTransferRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileFrameTransferRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileFrameTransferRequest& from);
  void MergeFrom(const FileFrameTransferRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileFrameTransferRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes frame_datas = 4;
  bool has_frame_datas() const;
  void clear_frame_datas();
  static const int kFrameDatasFieldNumber = 4;
  const ::std::string& frame_datas() const;
  void set_frame_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_frame_datas(::std::string&& value);
  #endif
  void set_frame_datas(const char* value);
  void set_frame_datas(const void* value, size_t size);
  ::std::string* mutable_frame_datas();
  ::std::string* release_frame_datas();
  void set_allocated_frame_datas(::std::string* frame_datas);

  // required int64 package_numb = 1;
  bool has_package_numb() const;
  void clear_package_numb();
  static const int kPackageNumbFieldNumber = 1;
  ::google::protobuf::int64 package_numb() const;
  void set_package_numb(::google::protobuf::int64 value);

  // required int64 file_id = 2;
  bool has_file_id() const;
  void clear_file_id();
  static const int kFileIdFieldNumber = 2;
  ::google::protobuf::int64 file_id() const;
  void set_file_id(::google::protobuf::int64 value);

  // required int64 frame_size = 3;
  bool has_frame_size() const;
  void clear_frame_size();
  static const int kFrameSizeFieldNumber = 3;
  ::google::protobuf::int64 frame_size() const;
  void set_frame_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:edwards.FileFrameTransferRequest)
 private:
  void set_has_package_numb();
  void clear_has_package_numb();
  void set_has_file_id();
  void clear_has_file_id();
  void set_has_frame_size();
  void clear_has_frame_size();
  void set_has_frame_datas();
  void clear_has_frame_datas();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr frame_datas_;
  ::google::protobuf::int64 package_numb_;
  ::google::protobuf::int64 file_id_;
  ::google::protobuf::int64 frame_size_;
  friend struct ::protobuf_file_5fupload_5fproto2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileFrameTransferResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:edwards.FileFrameTransferResponse) */ {
 public:
  FileFrameTransferResponse();
  virtual ~FileFrameTransferResponse();

  FileFrameTransferResponse(const FileFrameTransferResponse& from);

  inline FileFrameTransferResponse& operator=(const FileFrameTransferResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileFrameTransferResponse(FileFrameTransferResponse&& from) noexcept
    : FileFrameTransferResponse() {
    *this = ::std::move(from);
  }

  inline FileFrameTransferResponse& operator=(FileFrameTransferResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileFrameTransferResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileFrameTransferResponse* internal_default_instance() {
    return reinterpret_cast<const FileFrameTransferResponse*>(
               &_FileFrameTransferResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(FileFrameTransferResponse* other);
  friend void swap(FileFrameTransferResponse& a, FileFrameTransferResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileFrameTransferResponse* New() const final {
    return CreateMaybeMessage<FileFrameTransferResponse>(NULL);
  }

  FileFrameTransferResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileFrameTransferResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileFrameTransferResponse& from);
  void MergeFrom(const FileFrameTransferResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileFrameTransferResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // optional string reason = 5;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 5;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // required int64 package_numb = 1;
  bool has_package_numb() const;
  void clear_package_numb();
  static const int kPackageNumbFieldNumber = 1;
  ::google::protobuf::int64 package_numb() const;
  void set_package_numb(::google::protobuf::int64 value);

  // required int64 file_id = 2;
  bool has_file_id() const;
  void clear_file_id();
  static const int kFileIdFieldNumber = 2;
  ::google::protobuf::int64 file_id() const;
  void set_file_id(::google::protobuf::int64 value);

  // required int64 frame_size = 3;
  bool has_frame_size() const;
  void clear_frame_size();
  static const int kFrameSizeFieldNumber = 3;
  ::google::protobuf::int64 frame_size() const;
  void set_frame_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:edwards.FileFrameTransferResponse)
 private:
  void set_has_package_numb();
  void clear_has_package_numb();
  void set_has_file_id();
  void clear_has_file_id();
  void set_has_frame_size();
  void clear_has_frame_size();
  void set_has_result();
  void clear_has_result();
  void set_has_reason();
  void clear_has_reason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::google::protobuf::int64 package_numb_;
  ::google::protobuf::int64 file_id_;
  ::google::protobuf::int64 frame_size_;
  friend struct ::protobuf_file_5fupload_5fproto2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UploadEndRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:edwards.UploadEndRequest) */ {
 public:
  UploadEndRequest();
  virtual ~UploadEndRequest();

  UploadEndRequest(const UploadEndRequest& from);

  inline UploadEndRequest& operator=(const UploadEndRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UploadEndRequest(UploadEndRequest&& from) noexcept
    : UploadEndRequest() {
    *this = ::std::move(from);
  }

  inline UploadEndRequest& operator=(UploadEndRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadEndRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UploadEndRequest* internal_default_instance() {
    return reinterpret_cast<const UploadEndRequest*>(
               &_UploadEndRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UploadEndRequest* other);
  friend void swap(UploadEndRequest& a, UploadEndRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UploadEndRequest* New() const final {
    return CreateMaybeMessage<UploadEndRequest>(NULL);
  }

  UploadEndRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UploadEndRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UploadEndRequest& from);
  void MergeFrom(const UploadEndRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UploadEndRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string file_name = 3;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // required int64 package_numb = 1;
  bool has_package_numb() const;
  void clear_package_numb();
  static const int kPackageNumbFieldNumber = 1;
  ::google::protobuf::int64 package_numb() const;
  void set_package_numb(::google::protobuf::int64 value);

  // required int64 file_id = 2;
  bool has_file_id() const;
  void clear_file_id();
  static const int kFileIdFieldNumber = 2;
  ::google::protobuf::int64 file_id() const;
  void set_file_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:edwards.UploadEndRequest)
 private:
  void set_has_package_numb();
  void clear_has_package_numb();
  void set_has_file_id();
  void clear_has_file_id();
  void set_has_file_name();
  void clear_has_file_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int64 package_numb_;
  ::google::protobuf::int64 file_id_;
  friend struct ::protobuf_file_5fupload_5fproto2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UploadEndResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:edwards.UploadEndResponse) */ {
 public:
  UploadEndResponse();
  virtual ~UploadEndResponse();

  UploadEndResponse(const UploadEndResponse& from);

  inline UploadEndResponse& operator=(const UploadEndResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UploadEndResponse(UploadEndResponse&& from) noexcept
    : UploadEndResponse() {
    *this = ::std::move(from);
  }

  inline UploadEndResponse& operator=(UploadEndResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadEndResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UploadEndResponse* internal_default_instance() {
    return reinterpret_cast<const UploadEndResponse*>(
               &_UploadEndResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(UploadEndResponse* other);
  friend void swap(UploadEndResponse& a, UploadEndResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UploadEndResponse* New() const final {
    return CreateMaybeMessage<UploadEndResponse>(NULL);
  }

  UploadEndResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UploadEndResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UploadEndResponse& from);
  void MergeFrom(const UploadEndResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UploadEndResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string file_name = 3;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // required string result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // optional string reason = 5;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 5;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // required int64 package_numb = 1;
  bool has_package_numb() const;
  void clear_package_numb();
  static const int kPackageNumbFieldNumber = 1;
  ::google::protobuf::int64 package_numb() const;
  void set_package_numb(::google::protobuf::int64 value);

  // required int64 file_id = 2;
  bool has_file_id() const;
  void clear_file_id();
  static const int kFileIdFieldNumber = 2;
  ::google::protobuf::int64 file_id() const;
  void set_file_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:edwards.UploadEndResponse)
 private:
  void set_has_package_numb();
  void clear_has_package_numb();
  void set_has_file_id();
  void clear_has_file_id();
  void set_has_file_name();
  void clear_has_file_name();
  void set_has_result();
  void clear_has_result();
  void set_has_reason();
  void clear_has_reason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::google::protobuf::int64 package_numb_;
  ::google::protobuf::int64 file_id_;
  friend struct ::protobuf_file_5fupload_5fproto2_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UploadStartRequest

// required int64 package_numb = 1;
inline bool UploadStartRequest::has_package_numb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UploadStartRequest::set_has_package_numb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UploadStartRequest::clear_has_package_numb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UploadStartRequest::clear_package_numb() {
  package_numb_ = GOOGLE_LONGLONG(0);
  clear_has_package_numb();
}
inline ::google::protobuf::int64 UploadStartRequest::package_numb() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartRequest.package_numb)
  return package_numb_;
}
inline void UploadStartRequest::set_package_numb(::google::protobuf::int64 value) {
  set_has_package_numb();
  package_numb_ = value;
  // @@protoc_insertion_point(field_set:edwards.UploadStartRequest.package_numb)
}

// required int64 file_id = 2;
inline bool UploadStartRequest::has_file_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UploadStartRequest::set_has_file_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UploadStartRequest::clear_has_file_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UploadStartRequest::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
  clear_has_file_id();
}
inline ::google::protobuf::int64 UploadStartRequest::file_id() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartRequest.file_id)
  return file_id_;
}
inline void UploadStartRequest::set_file_id(::google::protobuf::int64 value) {
  set_has_file_id();
  file_id_ = value;
  // @@protoc_insertion_point(field_set:edwards.UploadStartRequest.file_id)
}

// required string file_name = 3;
inline bool UploadStartRequest::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadStartRequest::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadStartRequest::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadStartRequest::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& UploadStartRequest::file_name() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartRequest.file_name)
  return file_name_.GetNoArena();
}
inline void UploadStartRequest::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.UploadStartRequest.file_name)
}
#if LANG_CXX11
inline void UploadStartRequest::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.UploadStartRequest.file_name)
}
#endif
inline void UploadStartRequest::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.UploadStartRequest.file_name)
}
inline void UploadStartRequest::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.UploadStartRequest.file_name)
}
inline ::std::string* UploadStartRequest::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:edwards.UploadStartRequest.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadStartRequest::release_file_name() {
  // @@protoc_insertion_point(field_release:edwards.UploadStartRequest.file_name)
  if (!has_file_name()) {
    return NULL;
  }
  clear_has_file_name();
  return file_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadStartRequest::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:edwards.UploadStartRequest.file_name)
}

// required fixed64 file_size = 4;
inline bool UploadStartRequest::has_file_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UploadStartRequest::set_has_file_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UploadStartRequest::clear_has_file_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UploadStartRequest::clear_file_size() {
  file_size_ = GOOGLE_ULONGLONG(0);
  clear_has_file_size();
}
inline ::google::protobuf::uint64 UploadStartRequest::file_size() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartRequest.file_size)
  return file_size_;
}
inline void UploadStartRequest::set_file_size(::google::protobuf::uint64 value) {
  set_has_file_size();
  file_size_ = value;
  // @@protoc_insertion_point(field_set:edwards.UploadStartRequest.file_size)
}

// required string file_fromat = 5;
inline bool UploadStartRequest::has_file_fromat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UploadStartRequest::set_has_file_fromat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UploadStartRequest::clear_has_file_fromat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UploadStartRequest::clear_file_fromat() {
  file_fromat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_fromat();
}
inline const ::std::string& UploadStartRequest::file_fromat() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartRequest.file_fromat)
  return file_fromat_.GetNoArena();
}
inline void UploadStartRequest::set_file_fromat(const ::std::string& value) {
  set_has_file_fromat();
  file_fromat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.UploadStartRequest.file_fromat)
}
#if LANG_CXX11
inline void UploadStartRequest::set_file_fromat(::std::string&& value) {
  set_has_file_fromat();
  file_fromat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.UploadStartRequest.file_fromat)
}
#endif
inline void UploadStartRequest::set_file_fromat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_fromat();
  file_fromat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.UploadStartRequest.file_fromat)
}
inline void UploadStartRequest::set_file_fromat(const char* value, size_t size) {
  set_has_file_fromat();
  file_fromat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.UploadStartRequest.file_fromat)
}
inline ::std::string* UploadStartRequest::mutable_file_fromat() {
  set_has_file_fromat();
  // @@protoc_insertion_point(field_mutable:edwards.UploadStartRequest.file_fromat)
  return file_fromat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadStartRequest::release_file_fromat() {
  // @@protoc_insertion_point(field_release:edwards.UploadStartRequest.file_fromat)
  if (!has_file_fromat()) {
    return NULL;
  }
  clear_has_file_fromat();
  return file_fromat_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadStartRequest::set_allocated_file_fromat(::std::string* file_fromat) {
  if (file_fromat != NULL) {
    set_has_file_fromat();
  } else {
    clear_has_file_fromat();
  }
  file_fromat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_fromat);
  // @@protoc_insertion_point(field_set_allocated:edwards.UploadStartRequest.file_fromat)
}

// optional string file_storage_path = 6;
inline bool UploadStartRequest::has_file_storage_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UploadStartRequest::set_has_file_storage_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UploadStartRequest::clear_has_file_storage_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UploadStartRequest::clear_file_storage_path() {
  file_storage_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_storage_path();
}
inline const ::std::string& UploadStartRequest::file_storage_path() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartRequest.file_storage_path)
  return file_storage_path_.GetNoArena();
}
inline void UploadStartRequest::set_file_storage_path(const ::std::string& value) {
  set_has_file_storage_path();
  file_storage_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.UploadStartRequest.file_storage_path)
}
#if LANG_CXX11
inline void UploadStartRequest::set_file_storage_path(::std::string&& value) {
  set_has_file_storage_path();
  file_storage_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.UploadStartRequest.file_storage_path)
}
#endif
inline void UploadStartRequest::set_file_storage_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_storage_path();
  file_storage_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.UploadStartRequest.file_storage_path)
}
inline void UploadStartRequest::set_file_storage_path(const char* value, size_t size) {
  set_has_file_storage_path();
  file_storage_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.UploadStartRequest.file_storage_path)
}
inline ::std::string* UploadStartRequest::mutable_file_storage_path() {
  set_has_file_storage_path();
  // @@protoc_insertion_point(field_mutable:edwards.UploadStartRequest.file_storage_path)
  return file_storage_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadStartRequest::release_file_storage_path() {
  // @@protoc_insertion_point(field_release:edwards.UploadStartRequest.file_storage_path)
  if (!has_file_storage_path()) {
    return NULL;
  }
  clear_has_file_storage_path();
  return file_storage_path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadStartRequest::set_allocated_file_storage_path(::std::string* file_storage_path) {
  if (file_storage_path != NULL) {
    set_has_file_storage_path();
  } else {
    clear_has_file_storage_path();
  }
  file_storage_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_storage_path);
  // @@protoc_insertion_point(field_set_allocated:edwards.UploadStartRequest.file_storage_path)
}

// -------------------------------------------------------------------

// UploadStartReponse

// required int64 package_numb = 1;
inline bool UploadStartReponse::has_package_numb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UploadStartReponse::set_has_package_numb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UploadStartReponse::clear_has_package_numb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UploadStartReponse::clear_package_numb() {
  package_numb_ = GOOGLE_LONGLONG(0);
  clear_has_package_numb();
}
inline ::google::protobuf::int64 UploadStartReponse::package_numb() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartReponse.package_numb)
  return package_numb_;
}
inline void UploadStartReponse::set_package_numb(::google::protobuf::int64 value) {
  set_has_package_numb();
  package_numb_ = value;
  // @@protoc_insertion_point(field_set:edwards.UploadStartReponse.package_numb)
}

// required int64 file_id = 2;
inline bool UploadStartReponse::has_file_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UploadStartReponse::set_has_file_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UploadStartReponse::clear_has_file_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UploadStartReponse::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
  clear_has_file_id();
}
inline ::google::protobuf::int64 UploadStartReponse::file_id() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartReponse.file_id)
  return file_id_;
}
inline void UploadStartReponse::set_file_id(::google::protobuf::int64 value) {
  set_has_file_id();
  file_id_ = value;
  // @@protoc_insertion_point(field_set:edwards.UploadStartReponse.file_id)
}

// required string result = 3;
inline bool UploadStartReponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadStartReponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadStartReponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadStartReponse::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result();
}
inline const ::std::string& UploadStartReponse::result() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartReponse.result)
  return result_.GetNoArena();
}
inline void UploadStartReponse::set_result(const ::std::string& value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.UploadStartReponse.result)
}
#if LANG_CXX11
inline void UploadStartReponse::set_result(::std::string&& value) {
  set_has_result();
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.UploadStartReponse.result)
}
#endif
inline void UploadStartReponse::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.UploadStartReponse.result)
}
inline void UploadStartReponse::set_result(const char* value, size_t size) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.UploadStartReponse.result)
}
inline ::std::string* UploadStartReponse::mutable_result() {
  set_has_result();
  // @@protoc_insertion_point(field_mutable:edwards.UploadStartReponse.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadStartReponse::release_result() {
  // @@protoc_insertion_point(field_release:edwards.UploadStartReponse.result)
  if (!has_result()) {
    return NULL;
  }
  clear_has_result();
  return result_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadStartReponse::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    set_has_result();
  } else {
    clear_has_result();
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:edwards.UploadStartReponse.result)
}

// optional string reason = 4;
inline bool UploadStartReponse::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UploadStartReponse::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UploadStartReponse::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UploadStartReponse::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& UploadStartReponse::reason() const {
  // @@protoc_insertion_point(field_get:edwards.UploadStartReponse.reason)
  return reason_.GetNoArena();
}
inline void UploadStartReponse::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.UploadStartReponse.reason)
}
#if LANG_CXX11
inline void UploadStartReponse::set_reason(::std::string&& value) {
  set_has_reason();
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.UploadStartReponse.reason)
}
#endif
inline void UploadStartReponse::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.UploadStartReponse.reason)
}
inline void UploadStartReponse::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.UploadStartReponse.reason)
}
inline ::std::string* UploadStartReponse::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:edwards.UploadStartReponse.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadStartReponse::release_reason() {
  // @@protoc_insertion_point(field_release:edwards.UploadStartReponse.reason)
  if (!has_reason()) {
    return NULL;
  }
  clear_has_reason();
  return reason_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadStartReponse::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:edwards.UploadStartReponse.reason)
}

// -------------------------------------------------------------------

// FileFrameTransferRequest

// required int64 package_numb = 1;
inline bool FileFrameTransferRequest::has_package_numb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileFrameTransferRequest::set_has_package_numb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FileFrameTransferRequest::clear_has_package_numb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FileFrameTransferRequest::clear_package_numb() {
  package_numb_ = GOOGLE_LONGLONG(0);
  clear_has_package_numb();
}
inline ::google::protobuf::int64 FileFrameTransferRequest::package_numb() const {
  // @@protoc_insertion_point(field_get:edwards.FileFrameTransferRequest.package_numb)
  return package_numb_;
}
inline void FileFrameTransferRequest::set_package_numb(::google::protobuf::int64 value) {
  set_has_package_numb();
  package_numb_ = value;
  // @@protoc_insertion_point(field_set:edwards.FileFrameTransferRequest.package_numb)
}

// required int64 file_id = 2;
inline bool FileFrameTransferRequest::has_file_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FileFrameTransferRequest::set_has_file_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FileFrameTransferRequest::clear_has_file_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FileFrameTransferRequest::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
  clear_has_file_id();
}
inline ::google::protobuf::int64 FileFrameTransferRequest::file_id() const {
  // @@protoc_insertion_point(field_get:edwards.FileFrameTransferRequest.file_id)
  return file_id_;
}
inline void FileFrameTransferRequest::set_file_id(::google::protobuf::int64 value) {
  set_has_file_id();
  file_id_ = value;
  // @@protoc_insertion_point(field_set:edwards.FileFrameTransferRequest.file_id)
}

// required int64 frame_size = 3;
inline bool FileFrameTransferRequest::has_frame_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FileFrameTransferRequest::set_has_frame_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FileFrameTransferRequest::clear_has_frame_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FileFrameTransferRequest::clear_frame_size() {
  frame_size_ = GOOGLE_LONGLONG(0);
  clear_has_frame_size();
}
inline ::google::protobuf::int64 FileFrameTransferRequest::frame_size() const {
  // @@protoc_insertion_point(field_get:edwards.FileFrameTransferRequest.frame_size)
  return frame_size_;
}
inline void FileFrameTransferRequest::set_frame_size(::google::protobuf::int64 value) {
  set_has_frame_size();
  frame_size_ = value;
  // @@protoc_insertion_point(field_set:edwards.FileFrameTransferRequest.frame_size)
}

// required bytes frame_datas = 4;
inline bool FileFrameTransferRequest::has_frame_datas() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileFrameTransferRequest::set_has_frame_datas() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileFrameTransferRequest::clear_has_frame_datas() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileFrameTransferRequest::clear_frame_datas() {
  frame_datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_frame_datas();
}
inline const ::std::string& FileFrameTransferRequest::frame_datas() const {
  // @@protoc_insertion_point(field_get:edwards.FileFrameTransferRequest.frame_datas)
  return frame_datas_.GetNoArena();
}
inline void FileFrameTransferRequest::set_frame_datas(const ::std::string& value) {
  set_has_frame_datas();
  frame_datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.FileFrameTransferRequest.frame_datas)
}
#if LANG_CXX11
inline void FileFrameTransferRequest::set_frame_datas(::std::string&& value) {
  set_has_frame_datas();
  frame_datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.FileFrameTransferRequest.frame_datas)
}
#endif
inline void FileFrameTransferRequest::set_frame_datas(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_frame_datas();
  frame_datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.FileFrameTransferRequest.frame_datas)
}
inline void FileFrameTransferRequest::set_frame_datas(const void* value, size_t size) {
  set_has_frame_datas();
  frame_datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.FileFrameTransferRequest.frame_datas)
}
inline ::std::string* FileFrameTransferRequest::mutable_frame_datas() {
  set_has_frame_datas();
  // @@protoc_insertion_point(field_mutable:edwards.FileFrameTransferRequest.frame_datas)
  return frame_datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileFrameTransferRequest::release_frame_datas() {
  // @@protoc_insertion_point(field_release:edwards.FileFrameTransferRequest.frame_datas)
  if (!has_frame_datas()) {
    return NULL;
  }
  clear_has_frame_datas();
  return frame_datas_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileFrameTransferRequest::set_allocated_frame_datas(::std::string* frame_datas) {
  if (frame_datas != NULL) {
    set_has_frame_datas();
  } else {
    clear_has_frame_datas();
  }
  frame_datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame_datas);
  // @@protoc_insertion_point(field_set_allocated:edwards.FileFrameTransferRequest.frame_datas)
}

// -------------------------------------------------------------------

// FileFrameTransferResponse

// required int64 package_numb = 1;
inline bool FileFrameTransferResponse::has_package_numb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FileFrameTransferResponse::set_has_package_numb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FileFrameTransferResponse::clear_has_package_numb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FileFrameTransferResponse::clear_package_numb() {
  package_numb_ = GOOGLE_LONGLONG(0);
  clear_has_package_numb();
}
inline ::google::protobuf::int64 FileFrameTransferResponse::package_numb() const {
  // @@protoc_insertion_point(field_get:edwards.FileFrameTransferResponse.package_numb)
  return package_numb_;
}
inline void FileFrameTransferResponse::set_package_numb(::google::protobuf::int64 value) {
  set_has_package_numb();
  package_numb_ = value;
  // @@protoc_insertion_point(field_set:edwards.FileFrameTransferResponse.package_numb)
}

// required int64 file_id = 2;
inline bool FileFrameTransferResponse::has_file_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FileFrameTransferResponse::set_has_file_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FileFrameTransferResponse::clear_has_file_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FileFrameTransferResponse::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
  clear_has_file_id();
}
inline ::google::protobuf::int64 FileFrameTransferResponse::file_id() const {
  // @@protoc_insertion_point(field_get:edwards.FileFrameTransferResponse.file_id)
  return file_id_;
}
inline void FileFrameTransferResponse::set_file_id(::google::protobuf::int64 value) {
  set_has_file_id();
  file_id_ = value;
  // @@protoc_insertion_point(field_set:edwards.FileFrameTransferResponse.file_id)
}

// required int64 frame_size = 3;
inline bool FileFrameTransferResponse::has_frame_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FileFrameTransferResponse::set_has_frame_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FileFrameTransferResponse::clear_has_frame_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FileFrameTransferResponse::clear_frame_size() {
  frame_size_ = GOOGLE_LONGLONG(0);
  clear_has_frame_size();
}
inline ::google::protobuf::int64 FileFrameTransferResponse::frame_size() const {
  // @@protoc_insertion_point(field_get:edwards.FileFrameTransferResponse.frame_size)
  return frame_size_;
}
inline void FileFrameTransferResponse::set_frame_size(::google::protobuf::int64 value) {
  set_has_frame_size();
  frame_size_ = value;
  // @@protoc_insertion_point(field_set:edwards.FileFrameTransferResponse.frame_size)
}

// required string result = 4;
inline bool FileFrameTransferResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileFrameTransferResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileFrameTransferResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileFrameTransferResponse::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result();
}
inline const ::std::string& FileFrameTransferResponse::result() const {
  // @@protoc_insertion_point(field_get:edwards.FileFrameTransferResponse.result)
  return result_.GetNoArena();
}
inline void FileFrameTransferResponse::set_result(const ::std::string& value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.FileFrameTransferResponse.result)
}
#if LANG_CXX11
inline void FileFrameTransferResponse::set_result(::std::string&& value) {
  set_has_result();
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.FileFrameTransferResponse.result)
}
#endif
inline void FileFrameTransferResponse::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.FileFrameTransferResponse.result)
}
inline void FileFrameTransferResponse::set_result(const char* value, size_t size) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.FileFrameTransferResponse.result)
}
inline ::std::string* FileFrameTransferResponse::mutable_result() {
  set_has_result();
  // @@protoc_insertion_point(field_mutable:edwards.FileFrameTransferResponse.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileFrameTransferResponse::release_result() {
  // @@protoc_insertion_point(field_release:edwards.FileFrameTransferResponse.result)
  if (!has_result()) {
    return NULL;
  }
  clear_has_result();
  return result_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileFrameTransferResponse::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    set_has_result();
  } else {
    clear_has_result();
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:edwards.FileFrameTransferResponse.result)
}

// optional string reason = 5;
inline bool FileFrameTransferResponse::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileFrameTransferResponse::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FileFrameTransferResponse::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FileFrameTransferResponse::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& FileFrameTransferResponse::reason() const {
  // @@protoc_insertion_point(field_get:edwards.FileFrameTransferResponse.reason)
  return reason_.GetNoArena();
}
inline void FileFrameTransferResponse::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.FileFrameTransferResponse.reason)
}
#if LANG_CXX11
inline void FileFrameTransferResponse::set_reason(::std::string&& value) {
  set_has_reason();
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.FileFrameTransferResponse.reason)
}
#endif
inline void FileFrameTransferResponse::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.FileFrameTransferResponse.reason)
}
inline void FileFrameTransferResponse::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.FileFrameTransferResponse.reason)
}
inline ::std::string* FileFrameTransferResponse::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:edwards.FileFrameTransferResponse.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileFrameTransferResponse::release_reason() {
  // @@protoc_insertion_point(field_release:edwards.FileFrameTransferResponse.reason)
  if (!has_reason()) {
    return NULL;
  }
  clear_has_reason();
  return reason_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileFrameTransferResponse::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:edwards.FileFrameTransferResponse.reason)
}

// -------------------------------------------------------------------

// UploadEndRequest

// required int64 package_numb = 1;
inline bool UploadEndRequest::has_package_numb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UploadEndRequest::set_has_package_numb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UploadEndRequest::clear_has_package_numb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UploadEndRequest::clear_package_numb() {
  package_numb_ = GOOGLE_LONGLONG(0);
  clear_has_package_numb();
}
inline ::google::protobuf::int64 UploadEndRequest::package_numb() const {
  // @@protoc_insertion_point(field_get:edwards.UploadEndRequest.package_numb)
  return package_numb_;
}
inline void UploadEndRequest::set_package_numb(::google::protobuf::int64 value) {
  set_has_package_numb();
  package_numb_ = value;
  // @@protoc_insertion_point(field_set:edwards.UploadEndRequest.package_numb)
}

// required int64 file_id = 2;
inline bool UploadEndRequest::has_file_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UploadEndRequest::set_has_file_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UploadEndRequest::clear_has_file_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UploadEndRequest::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
  clear_has_file_id();
}
inline ::google::protobuf::int64 UploadEndRequest::file_id() const {
  // @@protoc_insertion_point(field_get:edwards.UploadEndRequest.file_id)
  return file_id_;
}
inline void UploadEndRequest::set_file_id(::google::protobuf::int64 value) {
  set_has_file_id();
  file_id_ = value;
  // @@protoc_insertion_point(field_set:edwards.UploadEndRequest.file_id)
}

// required string file_name = 3;
inline bool UploadEndRequest::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadEndRequest::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadEndRequest::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadEndRequest::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& UploadEndRequest::file_name() const {
  // @@protoc_insertion_point(field_get:edwards.UploadEndRequest.file_name)
  return file_name_.GetNoArena();
}
inline void UploadEndRequest::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.UploadEndRequest.file_name)
}
#if LANG_CXX11
inline void UploadEndRequest::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.UploadEndRequest.file_name)
}
#endif
inline void UploadEndRequest::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.UploadEndRequest.file_name)
}
inline void UploadEndRequest::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.UploadEndRequest.file_name)
}
inline ::std::string* UploadEndRequest::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:edwards.UploadEndRequest.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadEndRequest::release_file_name() {
  // @@protoc_insertion_point(field_release:edwards.UploadEndRequest.file_name)
  if (!has_file_name()) {
    return NULL;
  }
  clear_has_file_name();
  return file_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadEndRequest::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:edwards.UploadEndRequest.file_name)
}

// -------------------------------------------------------------------

// UploadEndResponse

// required int64 package_numb = 1;
inline bool UploadEndResponse::has_package_numb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UploadEndResponse::set_has_package_numb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UploadEndResponse::clear_has_package_numb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UploadEndResponse::clear_package_numb() {
  package_numb_ = GOOGLE_LONGLONG(0);
  clear_has_package_numb();
}
inline ::google::protobuf::int64 UploadEndResponse::package_numb() const {
  // @@protoc_insertion_point(field_get:edwards.UploadEndResponse.package_numb)
  return package_numb_;
}
inline void UploadEndResponse::set_package_numb(::google::protobuf::int64 value) {
  set_has_package_numb();
  package_numb_ = value;
  // @@protoc_insertion_point(field_set:edwards.UploadEndResponse.package_numb)
}

// required int64 file_id = 2;
inline bool UploadEndResponse::has_file_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UploadEndResponse::set_has_file_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UploadEndResponse::clear_has_file_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UploadEndResponse::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
  clear_has_file_id();
}
inline ::google::protobuf::int64 UploadEndResponse::file_id() const {
  // @@protoc_insertion_point(field_get:edwards.UploadEndResponse.file_id)
  return file_id_;
}
inline void UploadEndResponse::set_file_id(::google::protobuf::int64 value) {
  set_has_file_id();
  file_id_ = value;
  // @@protoc_insertion_point(field_set:edwards.UploadEndResponse.file_id)
}

// required string file_name = 3;
inline bool UploadEndResponse::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadEndResponse::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadEndResponse::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadEndResponse::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& UploadEndResponse::file_name() const {
  // @@protoc_insertion_point(field_get:edwards.UploadEndResponse.file_name)
  return file_name_.GetNoArena();
}
inline void UploadEndResponse::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.UploadEndResponse.file_name)
}
#if LANG_CXX11
inline void UploadEndResponse::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.UploadEndResponse.file_name)
}
#endif
inline void UploadEndResponse::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.UploadEndResponse.file_name)
}
inline void UploadEndResponse::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.UploadEndResponse.file_name)
}
inline ::std::string* UploadEndResponse::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:edwards.UploadEndResponse.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadEndResponse::release_file_name() {
  // @@protoc_insertion_point(field_release:edwards.UploadEndResponse.file_name)
  if (!has_file_name()) {
    return NULL;
  }
  clear_has_file_name();
  return file_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadEndResponse::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:edwards.UploadEndResponse.file_name)
}

// required string result = 4;
inline bool UploadEndResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UploadEndResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UploadEndResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UploadEndResponse::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result();
}
inline const ::std::string& UploadEndResponse::result() const {
  // @@protoc_insertion_point(field_get:edwards.UploadEndResponse.result)
  return result_.GetNoArena();
}
inline void UploadEndResponse::set_result(const ::std::string& value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.UploadEndResponse.result)
}
#if LANG_CXX11
inline void UploadEndResponse::set_result(::std::string&& value) {
  set_has_result();
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.UploadEndResponse.result)
}
#endif
inline void UploadEndResponse::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.UploadEndResponse.result)
}
inline void UploadEndResponse::set_result(const char* value, size_t size) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.UploadEndResponse.result)
}
inline ::std::string* UploadEndResponse::mutable_result() {
  set_has_result();
  // @@protoc_insertion_point(field_mutable:edwards.UploadEndResponse.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadEndResponse::release_result() {
  // @@protoc_insertion_point(field_release:edwards.UploadEndResponse.result)
  if (!has_result()) {
    return NULL;
  }
  clear_has_result();
  return result_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadEndResponse::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    set_has_result();
  } else {
    clear_has_result();
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:edwards.UploadEndResponse.result)
}

// optional string reason = 5;
inline bool UploadEndResponse::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UploadEndResponse::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UploadEndResponse::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UploadEndResponse::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& UploadEndResponse::reason() const {
  // @@protoc_insertion_point(field_get:edwards.UploadEndResponse.reason)
  return reason_.GetNoArena();
}
inline void UploadEndResponse::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edwards.UploadEndResponse.reason)
}
#if LANG_CXX11
inline void UploadEndResponse::set_reason(::std::string&& value) {
  set_has_reason();
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edwards.UploadEndResponse.reason)
}
#endif
inline void UploadEndResponse::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edwards.UploadEndResponse.reason)
}
inline void UploadEndResponse::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edwards.UploadEndResponse.reason)
}
inline ::std::string* UploadEndResponse::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:edwards.UploadEndResponse.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadEndResponse::release_reason() {
  // @@protoc_insertion_point(field_release:edwards.UploadEndResponse.reason)
  if (!has_reason()) {
    return NULL;
  }
  clear_has_reason();
  return reason_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadEndResponse::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:edwards.UploadEndResponse.reason)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace edwards

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_file_5fupload_5fproto2_2eproto
